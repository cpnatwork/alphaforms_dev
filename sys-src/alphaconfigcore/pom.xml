<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>promed</groupId>
		<artifactId>alphaconfigbase</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../alphaconfigbase</relativePath>
	</parent>
	
	<artifactId>alphaconfigcore</artifactId>

	<packaging>pom</packaging>
	<name>alpha-Config Core (Dependendies and Plug-Ins)</name>

	<description>The alpha-Config Core contains essential dependencies and Plug-In configurations. 
	It is indepdendent of a specific project context and applies to any Java project.</description>

	
	<dependencies>

		<!-- ********** -->
		<!-- Scope TEST -->
		<!-- ********** -->

		<!-- TestNG (PREFERRED) http://www.mkyong.com/unittest/junit-4-vs-testng-comparison/ -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${lib.testng.version}</version>
			<scope>test</scope>
			<!-- was needed for versions <= 5.11 <classifier>jdk15</classifier> -->
		</dependency>
		<!-- JUnit 4 (DEPRECATED) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${lib.junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Mocking <br/> http://code.google.com/p/mockito/wiki/FAQ <br/> http://docs.mockito.googlecode.com/hg/org/mockito/Mockito.html -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${lib.mockito.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!-- To configure plug-ins for this POM and any inheriting POMs -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${plugin.compiler.version}</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<meminitial>${project.build.minmem}</meminitial>
						<maxmem>${project.build.maxmem}</maxmem>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${plugin.jar.version}</version>
					<executions>
						<execution>
						   <goals>
							 <goal>test-jar</goal>
						   </goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${plugin.site.version}</version>
					<configuration>
						<siteDirectory>${project.basedir}\..\src\site</siteDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${plugin.javadoc.version}</version>
					<configuration>
						<detectOfflineLinks>false</detectOfflineLinks>
						<detectLinks>false</detectLinks>
						<detectJavaApiLink>true</detectJavaApiLink>
						<linksource>true</linksource>
						<useStandardDocletOptions>true</useStandardDocletOptions>
						<charset>${project.build.sourceEncoding}</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>${project.build.sourceEncoding}</docencoding>
						<breakiterator>true</breakiterator>
						<version>true</version>
						<author>true</author>
						<keywords>true</keywords>
						<minmemory>${project.build.minmem}</minmemory>
						<maxmemory>${project.build.maxmem}</maxmemory>
						<doclet>org.jboss.apiviz.APIviz</doclet>
						<docletArtifact>
							<groupId>org.jboss.apiviz</groupId>
							<artifactId>apiviz</artifactId>
							<version>${plugin.apiviz.version}</version>
						</docletArtifact>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${plugin.jxr.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${plugin.surefire.version}</version>
					<configuration>
						<argLine>-Xms${project.build.minmem} -Xmx${project.build.maxmem}</argLine>
						<skipTests>${skipTests}</skipTests>
						<testFailureIgnore>${maven.test.failure.ignore}</testFailureIgnore>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>${plugin.jdepend.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${plugin.cobertura.version}</version>
					<configuration>
						<formats>
							<format>xml</format>
							<format>html</format>
						</formats>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${plugin.findbugs.version}</version>
					<configuration>
						<effort>Max</effort>
						<threshold>Low</threshold>
						<xmlOutput>true</xmlOutput>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${plugin.pmd.version}</version>
					<configuration>
						<!-- Do not put targetJdk = 1.6, cause PMD only support 1.4 and 1.5 
							at the moment, put JDK1.6 will make PMD ignore the setting and use JDK1.4 
							instead. -->
						<targetJdk>1.5</targetJdk>
						<linkXref>true</linkXref>
						<sourceEncoding>utf-8</sourceEncoding>
						<minimumTokens>100</minimumTokens>
						<rulesets>
							<ruleset>/rulesets/basic.xml</ruleset>
							<ruleset>/rulesets/imports.xml</ruleset>
							<ruleset>/rulesets/unusedcode.xml</ruleset>
							<ruleset>/rulesets/braces.xml</ruleset>
							<ruleset>/rulesets/strings.xml</ruleset>
							<ruleset>/rulesets/naming.xml</ruleset>
							<!--<ruleset>/rulesets/junit.xml</ruleset> -->
							<!-- <ruleset>/rulesets/codesize.xml</ruleset> -->
							<!-- <ruleset>/rulesets/design.xml</ruleset> -->
							<!-- <ruleset>/rulesets/controversial.xml</ruleset> -->
						</rulesets>
						<!-- BEGIN EXAMPLE: <excludes> <exclude>**/*Bean.java</exclude> <exclude>**/generated/*.java</exclude> 
							</excludes> <excludeRoots> <excludeRoot>target/generated-sources/stubs</excludeRoot> 
							</excludeRoots> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>javancss-maven-plugin</artifactId>
					<version>${plugin.javancss.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${plugin.checkstyle.version}</version>
					<configuration>
						<configLocation>checkstyle.xml</configLocation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dashboard-maven-plugin</artifactId>
					<version>${plugin.dashboard.version}</version>
				</plugin>
				<plugin>
					<groupId>com.pyx4me</groupId>
					<artifactId>proguard-maven-plugin</artifactId>
					<version>${plugin.pyx4me-proguard.version}</version>
				</plugin>
				<plugin>
					<groupId>org.dstovall</groupId>
					<artifactId>onejar-maven-plugin</artifactId>
					<version>${plugin.onejar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- COMPILER -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${plugin.compiler.version}</version>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${plugin.jar.version}</version>
				<executions>
					<execution>
					   <goals>
						 <goal>test-jar</goal>
					   </goals>
					</execution>
				</executions>
			</plugin>

			<!-- REPORTING PLUG-INs in STAND-ALONE mode -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${plugin.javadoc.version}</version>
				<executions>
					<execution>
						<id>aggregate</id>
						<goals>
							<goal>aggregate</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${plugin.jxr.version}</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${plugin.surefire.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${plugin.cobertura.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${plugin.findbugs.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${plugin.pmd.version}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>${plugin.javancss.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${plugin.checkstyle.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${plugin.site.version}</version>
				<configuration>
					<siteDirectory>${project.basedir}\..\src\site</siteDirectory>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${plugin.projectinfo.version}</version>
							<configuration>
								<!-- for speed-up purposes, both variables can be set to 'false' 
									(in version < 2.4 there was a IOException when generating dependency report 
									in a multi-module build) -->
								<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
								<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
							</configuration>
							<reportSets>
								<reportSet>
									<reports>
										<report>index</report>
										<report>summary</report>
										<report>project-team</report>
										<report>license</report>
										<report>dependencies</report>
										<report>scm</report>
										<report>mailing-list</report>
										<report>issue-tracking</report>
										<!-- <report>cim</report> -->
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${plugin.javadoc.version}</version>
							<configuration>
								<detectOfflineLinks>false</detectOfflineLinks>
								<detectLinks>false</detectLinks>
								<detectJavaApiLink>true</detectJavaApiLink>
								<linksource>true</linksource>
								<useStandardDocletOptions>true</useStandardDocletOptions>
								<charset>${project.build.sourceEncoding}</charset>
								<encoding>${project.build.sourceEncoding}</encoding>
								<docencoding>${project.build.sourceEncoding}</docencoding>
								<breakiterator>true</breakiterator>
								<version>true</version>
								<author>true</author>
								<keywords>true</keywords>
								<minmemory>${project.build.minmem}</minmemory>
								<maxmemory>${project.build.maxmem}</maxmemory>
								<doclet>org.jboss.apiviz.APIviz</doclet>
								<docletArtifact>
									<groupId>org.jboss.apiviz</groupId>
									<artifactId>apiviz</artifactId>
									<version>${plugin.apiviz.version}</version>
								</docletArtifact>
							</configuration>
							<reportSets>
								<reportSet>
									<id>non-aggregate</id>
									<configuration>
										<!-- Specific configuration for the non aggregate report -->
										<doclet>org.jboss.apiviz.APIviz</doclet>
										<docletArtifact>
											<groupId>org.jboss.apiviz</groupId>
											<artifactId>apiviz</artifactId>
											<version>${plugin.apiviz.version}</version>
										</docletArtifact>
										<additionalparam>
											-charset ${project.build.sourceEncoding}
											-docencoding ${project.build.sourceEncoding}
											-version
											-author
											-breakiterator
											-linksource
											-sourcetab 4
											-windowtitle
											"${project.name} ${project.version} API Reference"
											-doctitle
											"${project.name} ${project.version} API Reference"
											-link
											http://java.sun.com/javase/6/docs/api/
											-sourceclasspath
											${project.build.outputDirectory}
										</additionalparam>
									</configuration>
									<reports>
										<report>javadoc</report>
									</reports>
								</reportSet>
								<reportSet>
									<id>aggregate</id>
									<configuration>
										<!-- Specific configuration for the aggregate report -->
										<doclet>org.jboss.apiviz.APIviz</doclet>
										<docletArtifact>
											<groupId>org.jboss.apiviz</groupId>
											<artifactId>apiviz</artifactId>
											<version>${plugin.apiviz.version}</version>
										</docletArtifact>
										<additionalparam>
											-charset ${project.build.sourceEncoding}
											-docencoding ${project.build.sourceEncoding}
											-version
											-author
											-breakiterator
											-linksource
											-sourcetab 4
											-windowtitle
											"${project.name} ${project.version} API Reference"
											-doctitle
											"${project.name} ${project.version} API Reference"
											-link
											http://java.sun.com/javase/6/docs/api/
										</additionalparam>
									</configuration>
									<reports>
										<report>aggregate</report>
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>${plugin.jxr.version}</version>
							<!--http://maven.apache.org/plugins/maven-jxr-plugin/jxr-mojo.html -->
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${plugin.surefire.version}</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>jdepend-maven-plugin</artifactId>
							<version>${plugin.jdepend.version}</version>
							<!--http://mojo.codehaus.org/jdepend-maven-plugin/generate-mojo.html -->
							<configuration>
								<!-- No aggregate available!! -->
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>${plugin.cobertura.version}</version>
							<!--http://mojo.codehaus.org/cobertura-maven-plugin/cobertura-mojo.html -->
							<configuration>
								<aggregate>true</aggregate>
								<maxmem>${project.build.maxmem}</maxmem>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
							<version>${plugin.findbugs.version}</version>
							<!--http://mojo.codehaus.org/findbugs-maven-plugin/findbugs-mojo.html -->
							<configuration>
								<!-- No aggregate available!! -->
								<skip>false</skip>
								<!-- Min, Default and Max -->
								<effort>Max</effort>
								<!-- High, Default, Low, Ignore, and Exp -->
								<threshold>Low</threshold>
								<xmlOutput>true</xmlOutput>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>${plugin.pmd.version}</version>
							<!--http://maven.apache.org/plugins/maven-pmd-plugin/pmd-mojo.html -->
							<!--http://maven.apache.org/plugins/maven-pmd-plugin/cpd-mojo.html -->
							<configuration>
								<aggregate>true</aggregate>
								<skip>false</skip>
								<!-- Do not put targetJdk = 1.6, cause PMD only support 1.4 and 1.5 
									at the moment, put JDK1.6 will make PMD ignore the setting and use JDK1.4 
									instead. -->
								<targetJdk>1.5</targetJdk>
								<linkXref>true</linkXref>
								<sourceEncoding>utf-8</sourceEncoding>
								<minimumTokens>50</minimumTokens>
								<rulesets>
									<ruleset>/rulesets/basic.xml</ruleset>
									<ruleset>/rulesets/imports.xml</ruleset>
									<ruleset>/rulesets/unusedcode.xml</ruleset>
									<ruleset>/rulesets/braces.xml</ruleset>
									<ruleset>/rulesets/strings.xml</ruleset>
									<ruleset>/rulesets/naming.xml</ruleset>
									<ruleset>/rulesets/junit.xml</ruleset>
									<ruleset>/rulesets/codesize.xml</ruleset>
									<ruleset>/rulesets/design.xml</ruleset>
									<!--<ruleset>/rulesets/controversial.xml</ruleset> -->
								</rulesets>
								<!-- BEGIN EXAMPLE: <excludes> <exclude>**/*Bean.java</exclude> <exclude>**/generated/*.java</exclude> 
									</excludes> <excludeRoots> <excludeRoot>target/generated-sources/stubs</excludeRoot> 
									</excludeRoots> -->
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>taglist-maven-plugin</artifactId>
							<version>${plugin.taglist.version}</version>
							<!--http://mojo.codehaus.org/taglist-maven-plugin/taglist-mojo.html -->
							<configuration>
								<aggregate>true</aggregate>
								<skipTestSources>false</skipTestSources>
								<tagListOptions>
									<tagClasses>
										<tagClass>
											<displayName>Todo Work</displayName>
											<tags>
												<tag>
													<matchString>todo</matchString>
													<matchType>ignoreCase</matchType>
												</tag>
												<tag>
													<matchString>FIXME</matchString>
													<matchType>exact</matchType>
												</tag>
											</tags>
										</tagClass>
									</tagClasses>
								</tagListOptions>
							</configuration>
						</plugin>

						<plugin>
							<!-- aggregate: re-run the JavaNCSS report! mvn clean site && mvn 
								javancss:report -->
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>javancss-maven-plugin</artifactId>
							<version>${plugin.javancss.version}</version>
							<!--http://mojo.codehaus.org/javancss-maven-plugin/report-mojo.html -->
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>





			<plugin> <!-- EXTERNAL DEPENDENCY RESOLVER -->
				<groupId>com.savage7.maven.plugins</groupId>
				<artifactId>maven-external-dependency-plugin</artifactId>
				<version>0.5-SNAPSHOT</version>
				<!-- unfortunatelly, it does not work with Maven3 :-( -->
				<inherited>false</inherited>
				<configuration>
					<stagingDirectory>${project.build.directory}/lib-mvn-ext/</stagingDirectory>
					<createChecksum>true</createChecksum>
					<skipChecksumVerification>false</skipChecksumVerification>
					<force>false</force>
					<artifactItems>
						<artifactItem>
							<groupId>net.sf.proguard</groupId>
							<artifactId>proguard</artifactId>
							<version>4.6</version>
							<packaging>jar</packaging>
							<downloadUrl>file:///${basedir}/lib-mvn-ext/proguard/proguard.jar</downloadUrl>
						</artifactItem>
					</artifactItems>
					<artifactItems>
						<artifactItem>
							<groupId>org.bouncycastle</groupId>
							<artifactId>bcprov</artifactId>
							<version>1.47</version>
							<packaging>jar</packaging>
							<downloadUrl>file:///${basedir}/lib-mvn-ext/bouncycastle/bcprov.jar</downloadUrl>
						</artifactItem>
					</artifactItems>
					<artifactItems>
						<artifactItem>
							<groupId>org.bouncycastle</groupId>
							<artifactId>bcpg</artifactId>
							<version>1.47</version>
							<packaging>jar</packaging>
							<downloadUrl>file:///${basedir}/lib-mvn-ext/bouncycastle/bcpg.jar</downloadUrl>
						</artifactItem>
					</artifactItems>
				</configuration>
				<executions>
					<execution>
						<id>clean-external-dependencies</id>
						<phase>clean</phase>
						<goals>
							<!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:clean-external -->
							<goal>clean-external</goal>
						</goals>
					</execution>
					<execution>
						<id>resolve-install-external-dependencies</id>
						<phase>process-resources</phase>
						<goals>
							<!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external -->
							<goal>resolve-external</goal>


							<!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:install-external -->
							<goal>install-external</goal>
						</goals>
					</execution>
					<execution>
						<id>deploy-external-dependencies</id>
						<phase>deploy</phase>
						<goals>
							<!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:deploy-external -->
							<goal>deploy-external</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
